name: Build and Release for Linux and Windows

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
  workflow_dispatch:
    inputs:
      tag_version:
        description: 'Version tag (e.g., v1.2.3)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  create-packages:
    strategy:
      matrix:
        os: [ "ubuntu-latest", "windows-latest" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment for Linux (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y python3-venv build-essential
          echo "Environment setup complete."

      - name: Set up environment for Windows
        if: matrix.os == 'windows-latest'
        run: |
          choco install python312 --yes
          python -m ensurepip
          echo "Environment setup complete."

      - name: Install dependencies and build for Linux
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          chmod +x build.sh  # 确保脚本可执行
          ./build.sh  # 运行Bash脚本

      - name: Install dependencies and build for Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          .\build.ps1  # 运行PowerShell脚本

      - name: Upload build output as artifact
        uses: actions/upload-artifact@v4
        with:
          name: WelearnBrainBurst_${{ inputs.tag_version }}_${{ runner.os }}_${{ runner.arch }}
          path: |
            build/app.dist/**
          if-no-files-found: error
