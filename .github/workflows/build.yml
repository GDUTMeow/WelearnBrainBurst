name: Build and Release

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      custom_version:
        description: '版本号'
        required: false
        type: string

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 25
    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Setup MinGW
      run: choco install mingw -y
      shell: pwsh

    - name: Set Version
      id: set-version
      shell: pwsh
      run: |
        $version = if ("${{ inputs.custom_version }}") { 
            "${{ inputs.custom_version }}" 
        } else { 
            (git rev-parse --short HEAD).Substring(0,7) 
        }
        echo "version=$version" >> $env:GITHUB_OUTPUT

    - name: Compile
      shell: pwsh
      run: |
        $ProgressPreference = 'SilentlyContinue'
        pip install nuitka
        .\build.ps1 -Version "${{ steps.set-version.outputs.version }}"

    - name: Compress Artifacts
      shell: pwsh
      run: |
        $version = "${{ steps.set-version.outputs.version }}"
        Compress-Archive -Path .\build\app.dist\* -DestinationPath ".\build\WelearnBrainBurst-$version.zip"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: WelearnBrainBurst-${{ steps.set-version.outputs.version }}
        path: build/WelearnBrainBurst-${{ steps.set-version.outputs.version }}.zip

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.set-version.outputs.version }}
        name: Release ${{ steps.set-version.outputs.version }}
        body: |
          自动化构建版本: ${{ steps.set-version.outputs.version }}
          提交信息: ${{ github.event.head_commit.message }}
        files: build/WelearnBrainBurst-${{ steps.set-version.outputs.version }}.zip
        draft: false
        prerelease: ${{ github.event_name != 'workflow_dispatch' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}